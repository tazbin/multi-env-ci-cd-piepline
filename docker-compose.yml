version: '3.8'

services:
  production:
    container_name: nodejs-api-production
    build:
      context: .
      target: production
    environment:
      - REDIS_HOST=eco-redis-container-production
      - REDIS_PORT=6379
      - POSTGRES_HOST=eco-postgres-container
      - POSTGRES_DB=example-app-database-production
      - POSTGRES_USER=example-app-user-production
      - POSTGRES_PASSWORD=example-app-password
      - POSTGRES_PORT=5432
    ports:
      - '3001:3000'
    restart: unless-stopped

  develop:
    container_name: nodejs-api-dev
    build:
      context: .
      target: production
    environment:
      - REDIS_HOST=eco-redis-container
      - REDIS_PORT=6379
      - POSTGRES_HOST=eco-postgres-container
      - POSTGRES_DB=example-app-database-develop
      - POSTGRES_USER=example-app-user-develop
      - POSTGRES_PASSWORD=example-app-password
      - POSTGRES_PORT=5432
    ports:
      - '3002:3000'
    restart: unless-stopped

  staging:
    container_name: nodejs-api-staging
    build:
      context: .
      target: production
    environment:
      - REDIS_HOST=eco-redis-container-staging
      - REDIS_PORT=6379
      - POSTGRES_HOST=eco-postgres-container
      - POSTGRES_DB=example-app-database-staging
      - POSTGRES_USER=example-app-user-staging
      - POSTGRES_PASSWORD=example-app-password
      - POSTGRES_PORT=5432
    ports:
      - '3003:3000'
    restart: unless-stopped
